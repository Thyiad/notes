(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{375:function(t,a,e){"use strict";e.r(a);var v=e(42),s=Object(v.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h3",{attrs:{id:"前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),e("p",[t._v("陆陆续续看过很多浏览器的进程线程资料，此处仅为翻看资料的随手笔记，不做具体描述")]),t._v(" "),e("h3",{attrs:{id:"浏览器是多进程的"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浏览器是多进程的"}},[t._v("#")]),t._v(" 浏览器是多进程的")]),t._v(" "),e("ul",[e("li",[t._v("主进程\n"),e("blockquote",[e("p",[t._v("管理协调各个页面，创建/销毁各个页面进程，网络资源的管理、下载等")])])]),t._v(" "),e("li",[t._v("插件进程")]),t._v(" "),e("li",[t._v("GPU进程")]),t._v(" "),e("li",[t._v("渲染进程\n"),e("blockquote",[e("p",[t._v("每个tab都有自己独立的进程")])])])]),t._v(" "),e("h3",{attrs:{id:"渲染进程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#渲染进程"}},[t._v("#")]),t._v(" 渲染进程")]),t._v(" "),e("ul",[e("li",[t._v("GUI渲染线程")]),t._v(" "),e("li",[t._v("JS引擎线程")]),t._v(" "),e("li",[t._v("事件触发线程\n"),e("blockquote",[e("p",[t._v("即 event loop 线程")])])]),t._v(" "),e("li",[t._v("定时触发器线程\n"),e("blockquote",[e("p",[t._v("setTimeout, setInterval\n规范中规定延时小于4ms，也会当成4ms处理")])])]),t._v(" "),e("li",[t._v("http请求线程\n"),e("blockquote",[e("p",[t._v("常规的都是单域名限制最大6个，所有域名最大数量暂未了解到\n可以分散到多个域名，http2.0的多路复用也能变相解决该问题")])])])]),t._v(" "),e("h3",{attrs:{id:"js线程与gui线程互斥"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js线程与gui线程互斥"}},[t._v("#")]),t._v(" JS线程与GUI线程互斥")]),t._v(" "),e("p",[t._v("防止渲染前后DOM数据不一致，耗时的作需要使用web worker")]),t._v(" "),e("blockquote",[e("p",[t._v("通过postMessage 通信")])]),t._v(" "),e("h3",{attrs:{id:"浏览器渲染基本过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浏览器渲染基本过程"}},[t._v("#")]),t._v(" 浏览器渲染基本过程")]),t._v(" "),e("ul",[e("li",[t._v("解析html生成dom树")]),t._v(" "),e("li",[t._v("解析css构建render树（csss树结合dom树合并成render树）")]),t._v(" "),e("li",[t._v("布局render树（layout/reflow），计算尺寸、位置")]),t._v(" "),e("li",[t._v("绘制render树，绘制页面像素")]),t._v(" "),e("li",[t._v("发送到GPU，交由GPU显示")])]),t._v(" "),e("h3",{attrs:{id:"硬件加速"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#硬件加速"}},[t._v("#")]),t._v(" 硬件加速")]),t._v(" "),e("p",[t._v("渲染图层分为两种：普通图层、复合图层")]),t._v(" "),e("blockquote",[e("p",[t._v("Chrome源码调试 -> More Tools -> Rendering -> Layer borders，黄色的边框为复合图层")])]),t._v(" "),e("p",[t._v("硬件加速即指复合图层")]),t._v(" "),e("blockquote",[e("p",[t._v("translate3d、translateZ、opacity、will-chang、<video />、<iframe />、<canvas />、<webgl />")])]),t._v(" "),e("p",[t._v("复合图层独立于普通文档流中，修改后不会影响普通文档流")]),t._v(" "),e("blockquote",[e("p",[t._v("尽可能使复合图层层级高，浏览器默认会将高于复合图层的文档变为复合图层\n大量使用导致资源消耗过度，页面反而会更卡")])]),t._v(" "),e("h3",{attrs:{id:"event-loop"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#event-loop"}},[t._v("#")]),t._v(" event loop")]),t._v(" "),e("ul",[e("li",[t._v("JS引擎线程")]),t._v(" "),e("li",[t._v("事件触发线程")]),t._v(" "),e("li",[t._v("定时触发器线程")])]),t._v(" "),e("blockquote",[e("p",[t._v("事件触发器维护着一个任务队列，当JS引擎空闲时就会来取任务执行\n定时器触发后就会往事件触发器中推入任务")])]),t._v(" "),e("h3",{attrs:{id:"macrotask与microtask"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#macrotask与microtask"}},[t._v("#")]),t._v(" macrotask与microtask")]),t._v(" "),e("p",[t._v("优先级：microtask>macrotask")]),t._v(" "),e("blockquote",[e("p",[t._v("microtask: Promise、process.nextTick\nmacrotask: 主代码、setTimeout、setInterval")])]),t._v(" "),e("p",[t._v("参考资料：\nhttps://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/\nhttps://segmentfault.com/a/1190000012925872")])])}),[],!1,null,null,null);a.default=s.exports}}]);