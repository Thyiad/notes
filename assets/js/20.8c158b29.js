(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{374:function(t,a,s){"use strict";s.r(a);var e=s(42),v=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"node简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node简介"}},[t._v("#")]),t._v(" node简介")]),t._v(" "),s("p",[t._v("介绍了nodejs的起源、特点以及应用场景")]),t._v(" "),s("h3",{attrs:{id:"模块机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模块机制"}},[t._v("#")]),t._v(" 模块机制")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("nodejs中的模块机制叫做 commonjs")]),t._v(" "),s("blockquote",[s("p",[t._v("require, module.exports = {}")])])]),t._v(" "),s("li",[s("p",[t._v("模块分为两种：核心模块、文件模块")])]),t._v(" "),s("li",[s("p",[t._v("核心模块")]),t._v(" "),s("ul",[s("li",[t._v("C/C++编写，放在源码仓库的的src目录下")]),t._v(" "),s("li",[t._v("javascript编写，放在源码仓库的lib目录下")])]),t._v(" "),s("blockquote",[s("p",[t._v("C/C++编写核心模块，javascript负责包装和向外导出\n纯 C/C++编写的，被称为内建模块\njavascript 核心模块：js文件被v8的js2c.py转换成C++数组，使用时直接从内存中加载\n由里到外：内建模块>核心模块>文件模块")])])])]),t._v(" "),s("h3",{attrs:{id:"异步i-o"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异步i-o"}},[t._v("#")]),t._v(" 异步I/O")]),t._v(" "),s("p",[t._v("其他语言中主要是同步I/O，在node中异步I/O为其主要变成方式和设计理念")]),t._v(" "),s("p",[t._v("有4种：异步、同步、阻塞、非阻塞，操作系统只有阻塞I/O和非阻塞I/O")]),t._v(" "),s("blockquote",[s("p",[t._v("非/阻塞I/O 还是通过轮询，查询状态，跟异步I/O其实是两回事，很容易混淆\n轮询技术的衍变历程：")])]),t._v(" "),s("ul",[s("li",[t._v("read\n"),s("blockquote",[s("p",[t._v("重复检查I/O状态")])])]),t._v(" "),s("li",[t._v("select\n"),s("blockquote",[s("p",[t._v("对文件描述符上的事件状态进行判断")])])]),t._v(" "),s("li",[t._v("poll\n"),s("blockquote",[s("p",[t._v("在select的基础上改进，采用链表存储，避免数组长度的问题")])])]),t._v(" "),s("li",[t._v("epoll\n"),s("blockquote",[s("p",[t._v("最高效，真正的事件通知、执行回调")])])])]),t._v(" "),s("p",[t._v("大概过程：异步调用 -> 线程池执行 -> 事件循环（通知循环中的IO观察者）")]),t._v(" "),s("p",[t._v("非IO的异步api：")]),t._v(" "),s("ul",[s("li",[t._v("setTimeout")]),t._v(" "),s("li",[t._v("setInterval\n"),s("blockquote",[s("p",[t._v("这两者无需IO线程池的参与，在tick中判断是否需要执行\n插入到定时器观察者的一个红黑树中")])])]),t._v(" "),s("li",[t._v("process.nextTick\n"),s("blockquote",[s("p",[t._v("插入队列，下一轮tick中执行")])])]),t._v(" "),s("li",[t._v("setImmediate\n"),s("blockquote",[s("p",[t._v("优先级低于nextTick，nextTick属于idle观察者，setImmediate属于check观察者")])])])]),t._v(" "),s("h3",{attrs:{id:"异步编程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异步编程"}},[t._v("#")]),t._v(" 异步编程")]),t._v(" "),s("p",[t._v("sync async解决了回调地狱\n如果调用IO特别多，为了防止并发过多，还是需要自行设计队列来控制并发数")]),t._v(" "),s("h3",{attrs:{id:"内存控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内存控制"}},[t._v("#")]),t._v(" 内存控制")]),t._v(" "),s("ul",[s("li",[t._v("内存使用情况：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("node\nprocess.memoryUsage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  rss"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("26009600")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  heapTotal"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5222400")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 申请到的堆内存")]),t._v("\n  heapUsed"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2962952")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 已使用的内存")]),t._v("\n  external"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1526857")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  arrayBuffers"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9399")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("内存对象被分为新生代和老生代两代")])]),t._v(" "),s("blockquote",[s("p",[t._v("与java, .net很像")])]),t._v(" "),s("ul",[s("li",[t._v("新生代采用scavenge算法（具体实现中采用Cheney算法）")])]),t._v(" "),s("blockquote",[s("p",[t._v("scavenge: 内存一分为二，从from里把活的复制到to，然后角色翻转（from释放空间变成to，to变成from）")])]),t._v(" "),s("ul",[s("li",[t._v("老生代采用Mark-Sweep & Mark-Compact算法")])]),t._v(" "),s("blockquote",[s("p",[t._v("Mark-Sweep：引用标记，给活着的对象打上标记，清理未标记的对象\nMark-Sweep 会导致内存碎片（内存不连续）\nMark-Compact 会在清理后把活着的对象移动，使得内存连续")])]),t._v(" "),s("ul",[s("li",[t._v("增量标记、延迟清理、增量式整理")])]),t._v(" "),s("h3",{attrs:{id:"理解buffer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#理解buffer"}},[t._v("#")]),t._v(" 理解Buffer")]),t._v(" "),s("ul",[s("li",[t._v("处理字节所用")]),t._v(" "),s("li",[t._v("内存分配在C++层面，并不在V8的堆内存中")]),t._v(" "),s("li",[t._v("slab 分配机制")]),t._v(" "),s("li",[t._v("Node中以8KB为界限来区分Buffer是大对象还是小对象")])]),t._v(" "),s("h3",{attrs:{id:"网络编程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#网络编程"}},[t._v("#")]),t._v(" 网络编程")]),t._v(" "),s("p",[t._v("介绍了TCP、Http、WebSocket等原生模块")]),t._v(" "),s("h3",{attrs:{id:"构建web应用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构建web应用"}},[t._v("#")]),t._v(" 构建Web应用")]),t._v(" "),s("p",[t._v("从基础模块中搭建web应用")]),t._v(" "),s("h3",{attrs:{id:"玩转进程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#玩转进程"}},[t._v("#")]),t._v(" 玩转进程")]),t._v(" "),s("p",[t._v("Cluster")]),t._v(" "),s("h3",{attrs:{id:"测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#测试"}},[t._v("#")]),t._v(" 测试")]),t._v(" "),s("p",[t._v("单元测试、性能测试")]),t._v(" "),s("h3",{attrs:{id:"产品化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#产品化"}},[t._v("#")]),t._v(" 产品化")]),t._v(" "),s("p",[t._v("工程化、部署、性能、日志、监控、稳定性、异构并存")])])}),[],!1,null,null,null);a.default=v.exports}}]);